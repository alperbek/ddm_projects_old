// generated by Fast Light User Interface Designer (fluid) version 1.0108

#include "oxo_game.h"
struct fann *ann; 
struct fann *val; 
struct fann *hml; 
Fl_Button *But[9]; 
float Board[9]; 
int count; 

Fl_Group *Table=(Fl_Group *)0;

Fl_Button *But0=(Fl_Button *)0;

Fl_Button *But1=(Fl_Button *)0;

Fl_Button *But2=(Fl_Button *)0;

Fl_Button *But3=(Fl_Button *)0;

Fl_Button *But4=(Fl_Button *)0;

Fl_Button *But5=(Fl_Button *)0;

Fl_Button *But6=(Fl_Button *)0;

Fl_Button *But7=(Fl_Button *)0;

Fl_Button *But8=(Fl_Button *)0;

static void cb_Oynayal(Fl_Button*, void*) {
  InitMove();
int i;
for(i=0;i<9;i++){
  But[i]->box(FL_PLASTIC_UP_BOX);
  But[i]->activate();
  But[i]->label("");
}
 
// Rastgele ilk hamle
i=rand()%9;
Board[i]=1;
PrintBoard(Board);

Isaretle(i,true);
}

Fl_Group *Method=(Fl_Group *)0;

Fl_Round_Button *Method1=(Fl_Round_Button *)0;

Fl_Value_Output *ins=(Fl_Value_Output *)0;

Fl_Value_Output *ysa=(Fl_Value_Output *)0;

Fl_Double_Window* make_window() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(458, 152, "OXO Game ");
    w = o;
    o->tooltip("OXO game Programmed by BlueKid");
    o->box(FL_PLASTIC_DOWN_BOX);
    o->color((Fl_Color)27);
    { Table = new Fl_Group(15, 10, 130, 130);
      Table->box(FL_FLAT_BOX);
      Table->color((Fl_Color)23);
      { Fl_Button* o = But0 = new Fl_Button(20, 15, 40, 40);
        But0->box(FL_PLASTIC_UP_BOX);
        But0->color((Fl_Color)14);
        But0->labelsize(21);
        But0->callback((Fl_Callback*)cb_But, (void*)(0));
        But0->deactivate();
        But[0]=o;
      } // Fl_Button* But0
      { Fl_Button* o = But1 = new Fl_Button(60, 15, 40, 40);
        But1->box(FL_PLASTIC_UP_BOX);
        But1->color((Fl_Color)14);
        But1->labelsize(21);
        But1->callback((Fl_Callback*)cb_But, (void*)(1));
        But1->deactivate();
        But[1]=o;
      } // Fl_Button* But1
      { Fl_Button* o = But2 = new Fl_Button(100, 15, 40, 40);
        But2->box(FL_PLASTIC_UP_BOX);
        But2->color((Fl_Color)14);
        But2->labelsize(21);
        But2->callback((Fl_Callback*)cb_But, (void*)(2));
        But2->deactivate();
        But[2]=o;
      } // Fl_Button* But2
      { Fl_Button* o = But3 = new Fl_Button(20, 55, 40, 40);
        But3->box(FL_PLASTIC_UP_BOX);
        But3->color((Fl_Color)14);
        But3->labelsize(21);
        But3->callback((Fl_Callback*)cb_But, (void*)(3));
        But3->deactivate();
        But[3]=o;
      } // Fl_Button* But3
      { Fl_Button* o = But4 = new Fl_Button(60, 55, 40, 40);
        But4->box(FL_PLASTIC_UP_BOX);
        But4->color((Fl_Color)14);
        But4->labelsize(21);
        But4->callback((Fl_Callback*)cb_But, (void*)(4));
        But4->deactivate();
        But[4]=o;
      } // Fl_Button* But4
      { Fl_Button* o = But5 = new Fl_Button(100, 55, 40, 40);
        But5->box(FL_PLASTIC_UP_BOX);
        But5->color((Fl_Color)14);
        But5->labelsize(21);
        But5->callback((Fl_Callback*)cb_But, (void*)(5));
        But5->deactivate();
        But[5]=o;
      } // Fl_Button* But5
      { Fl_Button* o = But6 = new Fl_Button(20, 95, 40, 40);
        But6->box(FL_PLASTIC_UP_BOX);
        But6->color((Fl_Color)14);
        But6->labelsize(21);
        But6->callback((Fl_Callback*)cb_But, (void*)(6));
        But6->deactivate();
        But[6]=o;
      } // Fl_Button* But6
      { Fl_Button* o = But7 = new Fl_Button(60, 95, 40, 40);
        But7->box(FL_PLASTIC_UP_BOX);
        But7->color((Fl_Color)14);
        But7->labelsize(21);
        But7->callback((Fl_Callback*)cb_But, (void*)(7));
        But7->deactivate();
        But[7]=o;
      } // Fl_Button* But7
      { Fl_Button* o = But8 = new Fl_Button(100, 95, 40, 40);
        But8->box(FL_PLASTIC_UP_BOX);
        But8->color((Fl_Color)14);
        But8->labelsize(21);
        But8->callback((Fl_Callback*)cb_But, (void*)(8));
        But8->deactivate();
        But[8]=o;
      } // Fl_Button* But8
      Table->end();
    } // Fl_Group* Table
    { Fl_Button* o = new Fl_Button(345, 80, 100, 55, "Oynayal\375m !");
      o->tooltip("New Game");
      o->box(FL_PLASTIC_UP_BOX);
      o->color((Fl_Color)1);
      o->callback((Fl_Callback*)cb_Oynayal);
    } // Fl_Button* o
    { Method = new Fl_Group(165, 80, 160, 55);
      Method->box(FL_PLASTIC_UP_FRAME);
      { Fl_Round_Button* o = Method1 = new Fl_Round_Button(190, 90, 135, 15, "Rastgele E\360itimli");
        Method1->tooltip("ANN Trained with Randomly produced  Data");
        Method1->type(102);
        Method1->down_box(FL_ROUND_DOWN_BOX);
        o->value(1);
      } // Fl_Round_Button* Method1
      { Fl_Round_Button* o = new Fl_Round_Button(190, 110, 125, 15, "B\366l \326\360ren");
        o->tooltip("Parsed  and 2 ANN trained for where and how");
        o->type(102);
        o->down_box(FL_ROUND_DOWN_BOX);
      } // Fl_Round_Button* o
      Method->end();
    } // Fl_Group* Method
    { ins = new Fl_Value_Output(230, 21, 40, 28, "\335NSAN :");
      ins->tooltip("Human");
      ins->box(FL_PLASTIC_THIN_UP_BOX);
      ins->labelsize(18);
      ins->labelcolor((Fl_Color)4);
    } // Fl_Value_Output* ins
    { ysa = new Fl_Value_Output(402, 21, 40, 28, "B\335LG\335SAYAR  :");
      ysa->tooltip("Computer");
      ysa->box(FL_PLASTIC_THIN_UP_BOX);
      ysa->labelsize(18);
      ysa->labelcolor((Fl_Color)1);
    } // Fl_Value_Output* ysa
    o->end();
  } // Fl_Double_Window* o
  return w;
}

int main(int argc, char **argv) {
  Fl_Window  * window;
window = make_window( );
//
ann = fann_create_from_file("oxo.net");
val = fann_create_from_file("value.net");
hml = fann_create_from_file("hamle.net");

InitMove();
//

window->show( argc, argv );
return ( Fl :: run( ) );
  return Fl::run();
}

void ComputerMove() {
  if(Method1->value()==0) {
  ComputerMove2();
  return;
}

float *out;
float brd[9];
float otmp[9];
float max=0.0;
int pmax;

out = fann_run(ann, Board);
memcpy(otmp,out,9*sizeof(float));

for(int i=0;i<9;i++)
  if((otmp[i]-Board[i])<0.1) otmp[i]=-2;

for(int i=0;i<9;i++)
  if(otmp[i]>max){
    max=otmp[i];
    pmax=i;
  }

Board[pmax]=1;
Isaretle(pmax,true);
if(isEnd(Board)==1)
  ComputerWin();
}

void ComputerMove2() {
  float *out;
float *hout;
float in[3];
float onem[8];
float max=0.0;
int pmax;

char X1[8]={0,3,6,0,1,2,0,2};
char X2[8]={1,4,7,3,4,5,4,4};
char X3[8]={2,5,8,6,7,8,8,6};

for(int i=0;i<8;i++){
   in[0]=Board[X1[i]];
   in[1]=Board[X2[i]];
   in[2]=Board[X3[i]];
   out = fann_run(val, in);   
   onem[i]=*out;
   if(onem[i]>max){
     max=onem[i];
     pmax=i;
   }  

}

in[0]=Board[X1[pmax]];
in[1]=Board[X2[pmax]];
in[2]=Board[X3[pmax]];
out = fann_run(hml, in);   

for(int i=0;i<3;i++)
  out[i]=out[i]-in[i];
  if(out[0])
     pmax=X1[pmax];   
  else if(out[1])
     pmax=X2[pmax];
  else if(out[2])
     pmax=X3[pmax];  
  else{
    for(int i=0;i<9;i++)
      if(Board[i]==0) pmax =i;

  }

Board[pmax]=1;

Isaretle(pmax,true);

if(isEnd(Board)==1)
  ComputerWin();
}

void InitMove() {
  for(int i=0;i<9;i++)
    Board[i]=0.0;

count=0;
}

void PrintBoard(float *out) {
  /*
char Buf[40];
Out->clear();
Out->add("");
sprintf(Buf,"[%.1f] [%.1f] [%.1f]",out[0],out[1],out[2]);
Out->add(Buf);
sprintf(Buf,"[%.1f] [%.1f] [%.1f]",out[3],out[4],out[5]);
Out->add(Buf);
sprintf(Buf,"[%.1f] [%.1f] [%.1f]",out[6],out[7],out[8]);
Out->add(Buf);
Out->add("");
*/
}

int isEnd(float *brd) {
  char X1[8]={0,3,6,0,1,2,0,2};
char X2[8]={1,4,7,3,4,5,4,4};
char X3[8]={2,5,8,6,7,8,8,6};

for(int i=0;i<8;i++){
   if(brd[X1[i]]==brd[X2[i]] &&   brd[X2[i]]==brd[X3[i]] && brd[X3[i]]!=0){
        return (int)brd[X1[i]];
     }
   }
return 0;
}

void cb_But(Fl_Button*b, void*u) {
  if(Board[(int)u]) return;
Isaretle((int)u,false);
Board[(int)u]=-1;
if(isEnd(Board)==-1)
  HumanWin();
else
  ComputerMove();
}

void HumanWin() {
  fl_alert("Malesef Siz Kazandýnýz... ");
int v=(int)ins->value();
v+=1;
ins->value(v);
EndGame();
}

void ComputerWin() {
  fl_alert("Ben Kazandým... ");
int v=(int)ysa->value();
v+=1;
ysa->value(v);
EndGame();
}

void EndGame() {
  int i;
for(i=0;i<9;i++){
  But[i]->deactivate();
}
}

void Isaretle(int i,bool isysa) {
  But[i]->box(FL_BORDER_FRAME);
// But[i]->deactivate();
if(isysa){
  But[i]->label("X");
  But[i]->labelcolor(FL_RED);
}
else{
  But[i]->label("O");
  But[i]->labelcolor(FL_BLUE);
}

Table->redraw();
}
